From cee67d6763e9f0c44e97d867042993b1041f40fb Mon Sep 17 00:00:00 2001
From: Jeremy Newton <Jeremy.Newton@amd.com>
Date: Wed, 6 Apr 2022 15:07:13 -0400
Subject: [PATCH 2/3] SWDEV-321116 - Allow disabling ICD loader

This patch adds an option to allow not building the ICD loader with
rocm-opencl. This isn't useful for internal use, but distros will want
this to allow packaging rocm-opencl with their own OCL ICD loader.

Signed-off-by: Jeremy Newton <Jeremy.Newton@amd.com>
Change-Id: I6006593eceed543cd829e8949ec2256482815673
---
 CMakeLists.txt           | 23 ++++++++++++-------
 packaging/CMakeLists.txt | 49 +++++++++++++++++++++++++++-------------
 2 files changed, 48 insertions(+), 24 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0612fa2..3bb903a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,11 +10,14 @@ project(rocm-opencl)
 include(GNUInstallDirs)
 
 option(BUILD_TESTS "Enable building OpenCL tests" OFF)
+option(BUILD_ICD "Enable building OpenCL ICD Loader" ON)
 option(EMU_ENV "Enable building for emulation environment" OFF)
 
 
 set(OPENCL_ICD_LOADER_HEADERS_DIR "${CMAKE_CURRENT_LIST_DIR}/khronos/headers/opencl2.2" CACHE PATH "")
-add_subdirectory(khronos/icd)
+if(BUILD_ICD)
+  add_subdirectory(khronos/icd)
+endif()
 add_subdirectory(amdocl)
 add_subdirectory(tools/clinfo)
 add_subdirectory(tools/cltrace)
@@ -52,8 +55,10 @@ if (DEFINED ROCM_PATCH_VERSION)
   set(OPENCL_AMD_ICD_FILE "amdocl64_${ROCM_PATCH_VERSION}.icd")
 endif()
 
-get_target_property(OPENCL_LIB_VERSION_MAJOR OpenCL SOVERSION)
-get_target_property(OPENCL_LIB_VERSION_STRING OpenCL VERSION)
+if(BUILD_ICD)
+  get_target_property(OPENCL_LIB_VERSION_MAJOR OpenCL SOVERSION)
+  get_target_property(OPENCL_LIB_VERSION_STRING OpenCL VERSION)
+endif()
 
 #Set Package Version
 set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
@@ -71,11 +76,13 @@ message (STATUS "ROCM Installation path(ROCM_PATH): ${ROCM_PATH}")
 
 #Package: rocm-opencl,rocm-opencl-dev/devel,rocm-ocl-icd
 
-set(BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR}/packages/rocm-ocl-icd)
-configure_file(packaging/rocm-ocl-icd.postinst ${BUILD_DIR}/postinst @ONLY)
-configure_file(packaging/rocm-ocl-icd.prerm ${BUILD_DIR}/prerm @ONLY)
-configure_file(packaging/rocm-ocl-icd.rpm_post ${BUILD_DIR}/rpm_post @ONLY)
-configure_file(packaging/rocm-ocl-icd.rpm_postun ${BUILD_DIR}/rpm_postun @ONLY)
+if(BUILD_ICD)
+  set(BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR}/packages/rocm-ocl-icd)
+  configure_file(packaging/rocm-ocl-icd.postinst ${BUILD_DIR}/postinst @ONLY)
+  configure_file(packaging/rocm-ocl-icd.prerm ${BUILD_DIR}/prerm @ONLY)
+  configure_file(packaging/rocm-ocl-icd.rpm_post ${BUILD_DIR}/rpm_post @ONLY)
+  configure_file(packaging/rocm-ocl-icd.rpm_postun ${BUILD_DIR}/rpm_postun @ONLY)
+endif()
 
 add_subdirectory(packaging)
 
diff --git a/packaging/CMakeLists.txt b/packaging/CMakeLists.txt
index 2b6fa77..ab8fed2 100644
--- a/packaging/CMakeLists.txt
+++ b/packaging/CMakeLists.txt
@@ -1,7 +1,10 @@
 cmake_minimum_required(VERSION 3.5.1)
 include(GNUInstallDirs)
 
-set(CPACK_COMPONENTS_ALL binary dev icd)
+set(CPACK_COMPONENTS_ALL binary dev)
+if(BUILD_ICD)
+  string ( APPEND CPACK_COMPONENTS_ALL " icd" )
+endif()
 set(CPACK_DEB_COMPONENT_INSTALL ON)
 set(CPACK_RPM_COMPONENT_INSTALL ON)
 
@@ -17,8 +20,10 @@ install(DIRECTORY ${CMAKE_SOURCE_DIR}/khronos/headers/opencl2.2/CL
         PATTERN cl_dx9_media_sharing.h EXCLUDE
         PATTERN cl_egl.h EXCLUDE )
 
-install(TARGETS OpenCL DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT icd )
-install(FILES ${CMAKE_SOURCE_DIR}/khronos/icd/LICENSE DESTINATION ${CMAKE_INSTALL_DATADIR}/doc/rocm-ocl-icd COMPONENT icd)
+if(BUILD_ICD)
+  install(TARGETS OpenCL DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT icd )
+  install(FILES ${CMAKE_SOURCE_DIR}/khronos/icd/LICENSE DESTINATION ${CMAKE_INSTALL_DATADIR}/doc/rocm-ocl-icd COMPONENT icd)
+endif()
 
 
 # Generic CPACK variables
@@ -45,11 +50,19 @@ endif()
 message("Using CPACK_DEBIAN_PACKAGE_RELEASE ${CPACK_DEBIAN_PACKAGE_RELEASE}")
 
 set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
-set(CPACK_DEBIAN_BINARY_PACKAGE_DEPENDS "rocm-ocl-icd, libelf-dev, comgr, hsa-rocr, rocm-core")
+if(BUILD_ICD)
+  set(CPACK_DEBIAN_BINARY_PACKAGE_DEPENDS "rocm-ocl-icd, libelf-dev, comgr, hsa-rocr, rocm-core")
+else()
+  set(CPACK_DEBIAN_BINARY_PACKAGE_DEPENDS "ocl-icd-libopencl1, libelf-dev, comgr, hsa-rocr, rocm-core")
+endif()
 
 # RPM CPACK variables
 set(CPACK_BINARY_RPM "ON")
-set(CPACK_RPM_BINARY_PACKAGE_REQUIRES "rocm-ocl-icd, comgr, hsa-rocr, rocm-core")
+if(BUILD_ICD)
+  set(CPACK_RPM_BINARY_PACKAGE_REQUIRES "rocm-ocl-icd, comgr, hsa-rocr, rocm-core")
+else()
+  set(CPACK_RPM_BINARY_PACKAGE_REQUIRES "ocl-icd, comgr, hsa-rocr, rocm-core")
+endif()
 
 #Unable to set CPACK_RPM_BIANRY_PACKAGE_LICENSE to control individual pacakge license
 #Hence combining the license for BINARY,DEV,ICD to one
@@ -70,21 +83,23 @@ set(CPACK_RPM_DEV_PACKAGE_REQUIRES "rocm-opencl, hsa-rocr-devel, rocm-core")
 #############################
 
 # Debian CPACK variables
-set(CPACK_ICD_DEB "ON")
-set(CPACK_DEBIAN_ICD_PACKAGE_NAME "rocm-ocl-icd")
+if(BUILD_ICD)
+  set(CPACK_ICD_DEB "ON")
+  set(CPACK_DEBIAN_ICD_PACKAGE_NAME "rocm-ocl-icd")
 
-set(CPACK_DEBIAN_ICD_PACKAGE_CONTROL_EXTRA "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/postinst;${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/prerm")
-set(CPACK_DEBIAN_ICD_PACKAGE_DEPENDS "rocm-core")
+  set(CPACK_DEBIAN_ICD_PACKAGE_CONTROL_EXTRA "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/postinst;${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/prerm")
+  set(CPACK_DEBIAN_ICD_PACKAGE_DEPENDS "rocm-core")
 
 # RPM CPACK variables
-set(CPACK_ICD_RPM "ON")
-set(CPACK_RPM_ICD_PACKAGE_NAME "rocm-ocl-icd")
+  set(CPACK_ICD_RPM "ON")
+  set(CPACK_RPM_ICD_PACKAGE_NAME "rocm-ocl-icd")
 
 
 
-set(CPACK_RPM_ICD_POST_INSTALL_SCRIPT_FILE "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/rpm_post")
-set(CPACK_RPM_ICD_POST_UNINSTALL_SCRIPT_FILE "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/rpm_postun")
-set(CPACK_RPM_ICD_PACKAGE_REQUIRES "rocm-core")
+  set(CPACK_RPM_ICD_POST_INSTALL_SCRIPT_FILE "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/rpm_post")
+  set(CPACK_RPM_ICD_POST_UNINSTALL_SCRIPT_FILE "${CMAKE_BINARY_DIR}/packages/rocm-ocl-icd/rpm_postun")
+  set(CPACK_RPM_ICD_PACKAGE_REQUIRES "rocm-core")
+endif()
 
 if(DEFINED ENV{CPACK_RPM_PACKAGE_RELEASE})
   set(CPACK_RPM_PACKAGE_RELEASE $ENV{CPACK_RPM_PACKAGE_RELEASE})
@@ -113,8 +128,10 @@ if(NOT ROCM_DEP_ROCMCORE)
     string(REGEX REPLACE ",? ?rocm-core" "" CPACK_DEBIAN_BINARY_PACKAGE_DEPENDS ${CPACK_DEBIAN_BINARY_PACKAGE_DEPENDS})
     string(REGEX REPLACE ",? ?rocm-core" "" CPACK_RPM_DEV_PACKAGE_REQUIRES ${CPACK_RPM_DEV_PACKAGE_REQUIRES})
     string(REGEX REPLACE ",? ?rocm-core" "" CPACK_DEBIAN_DEV_PACKAGE_DEPENDS ${CPACK_DEBIAN_DEV_PACKAGE_DEPENDS})
-    string(REGEX REPLACE ",? ?rocm-core" "" CPACK_RPM_ICD_PACKAGE_REQUIRES ${CPACK_RPM_ICD_PACKAGE_REQUIRES})
-    string(REGEX REPLACE ",? ?rocm-core" "" CPACK_DEBIAN_ICD_PACKAGE_DEPENDS ${CPACK_DEBIAN_ICD_PACKAGE_DEPENDS})
+    if(BUILD_ICD)
+        string(REGEX REPLACE ",? ?rocm-core" "" CPACK_RPM_ICD_PACKAGE_REQUIRES ${CPACK_RPM_ICD_PACKAGE_REQUIRES})
+        string(REGEX REPLACE ",? ?rocm-core" "" CPACK_DEBIAN_ICD_PACKAGE_DEPENDS ${CPACK_DEBIAN_ICD_PACKAGE_DEPENDS})
+    endif()
 endif()
 
 include(CPack)
-- 
2.35.1

