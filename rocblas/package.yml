name       : rocblas
version    : 5.1.3
release    : 1
source     :
    - https://github.com/ROCmSoftwarePlatform/rocBLAS/archive/refs/tags/rocm-5.1.3.tar.gz : 915374431db8f0cecdc2bf318a0ad33c3a8eceedc461d7a06b92ccb02b07313c
license    : MIT
component  : programming.library
clang      : yes
networking : yes
summary    : Next generation BLAS implementation for ROCm platform
description: |
    rocBLAS is the AMD library for Basic Linear Algebra Subprograms (BLAS) on the ROCm platform. It is implemented in the HIP programming language and optimized for AMD GPUs.
builddeps  :
    - pkgconfig(msgpack)
    - git
    - pkgconfig(libhsakmt)
    - perl-file-which
    - pyyaml
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-hip-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
    - rocm-smi-devel
    - virtualenv
environment: |
    export ROCM_PATH=%PREFIX%
    export ROCM_DIR=%PREFIX%

    export HIP_PLATFORM=amd
    export HIP_RUNTIME=rocclr
    export HIP_COMPILER=clang
    export HIP_CLANG_PATH=/usr/bin
    export DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    export HIP_DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    export HSA_PATH=/usr/hsa
    export LLVM_PATH=/usr
    export HIP_CLANG_HCC_COMPAT_MODE=1
    # https://github.com/ROCm-Developer-Tools/HIP/blob/rocm-5.1.x/docs/markdown/clang_options.md
    export CXXFLAGS="${CXXFLAGS/-fstack-protector-strong/} -fcf-protection=none"
setup      : |
    %cmake_ninja -Wno-dev \
                -Damd_comgr_DIR=/usr/lib64/cmake/amd_comgr \
                -DTensile_CPU_THREADS=6 \
                -DBUILD_WITH_TENSILE=ON \
                -DBUILD_WITH_TENSILE_HOST=ON \
                -DENABLE_INLINE_ASM=1 \
                -DTensile_LIBRARY_FORMAT=yaml \
                -DTensile_LOGIC=asm_full \
                -DTensile_CODE_OBJECT_VERSION=V3 \
                -DBUILD_CLIENTS_TESTS=OFF \
                -DBUILD_CLIENTS_BENCHMARKS=OFF \
                -DBUILD_CLIENTS_SAMPLES=OFF \
                -DBUILD_TESTING=OFF \
                -DHIP_PATH="/usr/lib64/cmake" \
                -DCMAKE_PREFIX_PATH="/usr/include;/usr/lib64/cmake;/usr/share/rocm/cmake;/usr/lib64/amdgcn" \
                -DTensile_COMPILER="hipcc" \
                -DCMAKE_CXX_COMPILER=/usr/bin/hipcc \
                -DROCM_DIR=%PREFIX% \
                -DROCM_PATH=%PREFIX% \
                #-DAMDGPU_TARGETS='gfx906:xnack-' #limiting compilation to just one GPU speeds up build time massively
build      : |
    %ninja_build
install    : |
    %ninja_install
